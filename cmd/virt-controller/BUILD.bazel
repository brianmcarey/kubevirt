load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["virt-controller.go"],
    importpath = "kubevirt.io/kubevirt/cmd/virt-controller",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/monitoring/client/prometheus:go_default_library",
        "//pkg/monitoring/reflector/prometheus:go_default_library",
        "//pkg/monitoring/workqueue/prometheus:go_default_library",
        "//pkg/virt-controller/watch:go_default_library",
    ],
)

load("//vendor/kubevirt.io/client-go/version:def.bzl", "version_x_defs")

go_binary(
    name = "virt-controller",
    embed = [":go_default_library"],
    static = "on",
    visibility = ["//visibility:public"],
    x_defs = version_x_defs(),
)

load("@rules_pkg//:pkg.bzl", "pkg_tar")

pkg_tar(
    name = "version-tar",
    srcs = ["//:get-version"],
    mode = "0644",
    package_dir = "/",
)

pkg_tar(
    name = "virt-controller-tar",
    srcs = [":virt-controller"],
    mode = "0755",
    package_dir = "/usr/bin/",
)

load(
    "@rules_oci//oci:defs.bzl",
    "oci_image",
)

oci_image(
    name = "version-container",
    base = "//:passwd-image",
    tars = ["version-tar"],
)

oci_image(
    name = "virt-controller-image",
    #architecture = select({
    #    "@io_bazel_rules_go//go/platform:linux_arm64": "arm64",
    #    "//conditions:default": "amd64",
    #}),
    base = ":version-container",
    entrypoint = ["/usr/bin/virt-controller"],
    tars = ["virt-controller-tar"],
    user = "1001",
    visibility = ["//visibility:public"],
)
